---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: cookies
spec:
  location: global
  resourceID: cookies
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cookies
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: cookies
spec:
  rules:
  - host: cookies.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: cookies
            port:
              number: 80
  - host: cookie-unmatch.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: cookie-unmatch
            port:
              number: 80
  - host: cookie-match.example.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: cookie-match
            port:
              number: 80
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSecurityPolicy
metadata:
  name: cookies
spec:
  rule:
  - action: redirect
    priority: 0
    match:
      expr:
        expression: |
          has(request.headers['cookie']) && request.headers['cookie'].contains('Foo=Bar')
    redirectOptions:
      target: "http://cookie-match.example.com"
      type: EXTERNAL_302
  - action: redirect
    priority: 2147483647
    match:
      versionedExpr: SRC_IPS_V1
      config:
        srcIpRanges:
        - "*"
    redirectOptions:
      target: "http://cookie-unmatch.example.com"
      type: EXTERNAL_302
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: cookies
spec:
  securityPolicy:
    name: "cookies"
---
apiVersion: v1
kind: Service
metadata:
  name: cookies
  annotations:
    cloud.google.com/backend-config: '{"default": "cookies"}'
spec:
  type: NodePort
  selector:
    app: cookies
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cookies
  labels:
    app: cookies
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cookies
  template:
    metadata:
      labels:
        app: cookies
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo:latest
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: HTTPS_PORT
          value: "8443"
---
apiVersion: v1
kind: Service
metadata:
  name: cookie-match
spec:
  type: NodePort
  selector:
    app: cookie-match
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cookie-match
  labels:
    app: cookie-match
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cookie-match
  template:
    metadata:
      labels:
        app: cookie-match
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo:latest
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: HTTPS_PORT
          value: "8443"
---
apiVersion: v1
kind: Service
metadata:
  name: cookie-unmatch
spec:
  type: NodePort
  selector:
    app: cookie-unmatch
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cookie-unmatch
  labels:
    app: cookie-unmatch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cookie-unmatch
  template:
    metadata:
      labels:
        app: cookie-unmatch
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo:latest
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: HTTPS_PORT
          value: "8443"