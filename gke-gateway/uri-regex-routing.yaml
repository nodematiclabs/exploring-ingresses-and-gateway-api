---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: regex-routing
spec:
  location: global
  resourceID: regex-routing
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: regex-routing
spec:
  gatewayClassName: gke-l7-global-external-managed
  listeners:
  - name: http
    protocol: HTTP
    port: 80
    allowedRoutes:
      kinds:
      - kind: HTTPRoute
  addresses:
  - type: NamedAddress
    value: "regex-routing"
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: regex-routing
spec:
  parentRefs:
  - kind: Gateway
    name: regex-routing
  hostnames:
  - "regex-routing.example.com"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /abc
    backendRefs:
    - kind: Service
      name: regex-one
      port: 80
  - matches:
    - path:
        type: PathPrefix
        value: /123
    backendRefs:
    - kind: Service
      name: regex-two
      port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: regex-one
spec:
  type: ClusterIP
  selector:
    app: regex-one
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: regex-one
  labels:
    app: regex-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: regex-one
  template:
    metadata:
      labels:
        app: regex-one
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo:28
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: HTTPS_PORT
          value: "8443"
---
apiVersion: v1
kind: Service
metadata:
  name: regex-two
spec:
  type: ClusterIP
  selector:
    app: regex-two
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: regex-two
  labels:
    app: regex-two
spec:
  replicas: 1
  selector:
    matchLabels:
      app: regex-two
  template:
    metadata:
      labels:
        app: regex-two
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo:28
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: HTTPS_PORT
          value: "8443"